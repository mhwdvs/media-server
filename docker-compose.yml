services:
  # compose file documentation: https://docs.docker.com/compose/compose-file/

  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - NVIDIA_VISIBLE_DEVICES=all # allow for gpu encoding
      #- JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - ${STORAGE_PATH}/config/jellyfin:/config
      - ${STORAGE_PATH}/tv:/data/tvshows
      - ${STORAGE_PATH}/movies:/data/movies
    ports:
      - ${JELLYFIN_PORT}:8096
      #- 8920:8920 #optional
      #- 7359:7359/udp #optional
      #- 1900:1900/udp #optional
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      #- RUN_OPTS=<run options here> #optional
    volumes:
      - ${STORAGE_PATH}/config/jackett:/config
      - ${STORAGE_PATH}/downloads:/downloads
    network_mode: "service:gluetun"
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${STORAGE_PATH}/config/sonarr:/config
      - ${STORAGE_PATH}/tv:/tv #optional
      - ${STORAGE_PATH}/downloads:/downloads #optional
    network_mode: "service:gluetun"
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${STORAGE_PATH}/config/radarr:/config
      - ${STORAGE_PATH}/movies:/movies #optional
      - ${STORAGE_PATH}/downloads:/downloads #optional
    network_mode: "service:gluetun"
    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=${QBITTORRENT_PORT}
    volumes:
      - ${STORAGE_PATH}/config/qbittorrent:/config
      - ${STORAGE_PATH}/downloads:/downloads
    network_mode: "service:gluetun"
    restart: unless-stopped

  bazarr:
      image: linuxserver/bazarr:latest
      container_name: bazarr
      environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - TZ=${TZ}
      volumes:
        - ${STORAGE_PATH}/config/bazarr:/config
        - ${STORAGE_PATH}/movies:/movies #optional
        - ${STORAGE_PATH}/tv:/tv #optional
      network_mode: "service:gluetun"
      restart: unless-stopped

  requestrr:
    image: darkalfx/requestrr
    container_name: requestrr
    volumes:
      - ${STORAGE_PATH}/config/requestrr:/root/config
    network_mode: "service:gluetun"
    restart: unless-stopped

  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      # services available via localhost
      - ${JACKETT_PORT}:9117
      - ${SONARR_PORT}:8989
      - ${RADARR_PORT}:7878
      - ${QBITTORRENT_PORT}:6881
      - ${QBITTORRENT_PORT}:6881/udp
      - ${BAZARR_PORT}:6767
      - ${REQUESTRR_PORT}:4545
    volumes:
      - ${STORAGE_PATH}/config/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=openvpn
      - SERVER_COUNTRIES=${SERVER_COUNTRIES}
      # OpenVPN:
      - OPENVPN_USER=${OPENVPN_USER}
      #- OPENVPN_PASSWORD=
      # Wireguard:
      # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=
      # - WIREGUARD_ADDRESSES=10.64.222.21/32
      # Timezone for accurate log times
      - TZ=${TZ}

  # watchtower documentation: https://containrrr.dev/watchtower/
  watchtower: # keeps container images up to date
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
